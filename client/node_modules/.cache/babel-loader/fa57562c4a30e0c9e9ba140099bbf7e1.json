{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rin\\\\Desktop\\\\Projects\\\\discord-clone\\\\client\\\\src\\\\components\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { UserContext } from \"../context/UserContext\";\nimport { LoginContext } from \"../context/LoginContext\";\nimport { ServerContext } from \"../context/ServerContext\";\nimport styles from \"./Chat.module.css\";\nimport ChatBar from \"./ChatBar\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const {\n    serverList,\n    setServerList\n  } = useContext(ServerContext);\n  const {\n    isLoggedIn,\n    setIsLoggedIn\n  } = useContext(LoginContext);\n  const {\n    loginInfo,\n    setLoginInfo\n  } = useContext(UserContext);\n  const [showServer, setShowServer] = useState(null);\n  const {\n    id\n  } = useParams();\n\n  const handleMouseEnter = id => {\n    setShowServer(id);\n  };\n\n  const handleMouseLeave = id => {\n    setShowServer(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chat,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.insideapp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.server,\n        children: /*#__PURE__*/_jsxDEV(ChatBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.leftside,\n        children: serverList.map(server => {\n          return id === server.name && server.channels.map(channel => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.channel,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"# \", channel.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this)\n            }, channel.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this);\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.middle,\n        children: useEffect(() => {\n          const socket = io(\"http://localhost:4000/\", {\n            transports: [\"websocket\", \"polling\"]\n          });\n          socket.join(id);\n        }, [id])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightside\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"ONPCdLUDtILhqgnRKEqKlYp2sdA=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Rin/Desktop/Projects/discord-clone/client/src/components/Chat.js"],"names":["React","useState","useContext","useEffect","io","UserContext","LoginContext","ServerContext","styles","ChatBar","useParams","Chat","serverList","setServerList","isLoggedIn","setIsLoggedIn","loginInfo","setLoginInfo","showServer","setShowServer","id","handleMouseEnter","handleMouseLeave","chat","insideapp","server","leftside","map","name","channels","channel","middle","socket","transports","join","rightside"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCX,UAAU,CAACK,aAAD,CAAhD;AACA,QAAM;AAAEO,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCb,UAAU,CAACI,YAAD,CAAhD;AACA,QAAM;AAAEU,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8Bf,UAAU,CAACG,WAAD,CAA9C;AAEA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAM;AAAEmB,IAAAA;AAAF,MAASV,SAAS,EAAxB;;AAEA,QAAMW,gBAAgB,GAAID,EAAD,IAAQ;AAC/BD,IAAAA,aAAa,CAACC,EAAD,CAAb;AACD,GAFD;;AAGA,QAAME,gBAAgB,GAAIF,EAAD,IAAQ;AAC/BD,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACe,IAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACgB,SAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEhB,MAAM,CAACiB,MAAvB;AAAA,+BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAEjB,MAAM,CAACkB,QAAvB;AAAA,kBACGd,UAAU,CAACe,GAAX,CAAgBF,MAAD,IAAY;AAC1B,iBACEL,EAAE,KAAKK,MAAM,CAACG,IAAd,IACAH,MAAM,CAACI,QAAP,CAAgBF,GAAhB,CAAqBG,OAAD,IAAa;AAC/B,gCACE;AAAsB,cAAA,SAAS,EAAEtB,MAAM,CAACsB,OAAxC;AAAA,qCACE;AAAA,iCAAOA,OAAO,CAACF,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,eAAUE,OAAO,CAACV,EAAlB;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WAND,CAFF;AAUD,SAXA;AADH;AAAA;AAAA;AAAA;AAAA,cAJF,eAkBE;AAAK,QAAA,SAAS,EAAEZ,MAAM,CAACuB,MAAvB;AAAA,kBACG5B,SAAS,CAAC,MAAM;AACf,gBAAM6B,MAAM,GAAG5B,EAAE,CAAC,wBAAD,EAA2B;AAC1C6B,YAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd;AAD8B,WAA3B,CAAjB;AAGAD,UAAAA,MAAM,CAACE,IAAP,CAAYd,EAAZ;AACD,SALS,EAKP,CAACA,EAAD,CALO;AADZ;AAAA;AAAA;AAAA;AAAA,cAlBF,eA0BE;AAAK,QAAA,SAAS,EAAEZ,MAAM,CAAC2B;AAAvB;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CA/CD;;GAAMxB,I;UAOWD,S;;;KAPXC,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { LoginContext } from \"../context/LoginContext\";\r\nimport { ServerContext } from \"../context/ServerContext\";\r\nimport styles from \"./Chat.module.css\";\r\nimport ChatBar from \"./ChatBar\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Chat = () => {\r\n  const { serverList, setServerList } = useContext(ServerContext);\r\n  const { isLoggedIn, setIsLoggedIn } = useContext(LoginContext);\r\n  const { loginInfo, setLoginInfo } = useContext(UserContext);\r\n\r\n  const [showServer, setShowServer] = useState(null);\r\n\r\n  const { id } = useParams();\r\n\r\n  const handleMouseEnter = (id) => {\r\n    setShowServer(id);\r\n  };\r\n  const handleMouseLeave = (id) => {\r\n    setShowServer(null);\r\n  };\r\n  return (\r\n    <div className={styles.chat}>\r\n      <div className={styles.insideapp}>\r\n        <div className={styles.server}>\r\n          <ChatBar />\r\n        </div>\r\n        <div className={styles.leftside}>\r\n          {serverList.map((server) => {\r\n            return (\r\n              id === server.name &&\r\n              server.channels.map((channel) => {\r\n                return (\r\n                  <div key={channel.id} className={styles.channel}>\r\n                    <h3># {channel.name}</h3>\r\n                  </div>\r\n                );\r\n              })\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={styles.middle}>\r\n          {useEffect(() => {\r\n            const socket = io(\"http://localhost:4000/\", {\r\n              transports: [\"websocket\", \"polling\"],\r\n            });\r\n            socket.join(id);\r\n          }, [id])}\r\n        </div>\r\n        <div className={styles.rightside}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}