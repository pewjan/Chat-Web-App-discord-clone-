{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rin\\\\Desktop\\\\Projects\\\\discord-clone\\\\client\\\\src\\\\components\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { io } from \"socket.io-client\";\nimport { UserContext } from \"../context/UserContext\";\nimport { LoginContext } from \"../context/LoginContext\";\nimport { ServerContext } from \"../context/ServerContext\";\nimport styles from \"./Chat.module.css\";\nimport ChatBar from \"./ChatBar\";\nimport { useParams } from \"react-router-dom\";\nimport cors from \"cors\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:4000/\", {\n  transports: [\"websocket\", \"polling\"]\n});\n\nconst Chat = () => {\n  _s();\n\n  const {\n    serverList,\n    setServerList\n  } = useContext(ServerContext);\n  const {\n    isLoggedIn,\n    setIsLoggedIn\n  } = useContext(LoginContext);\n  const {\n    loginInfo,\n    setLoginInfo\n  } = useContext(UserContext);\n  const [message, setMessage] = useState(\"\");\n  const [showServer, setShowServer] = useState(null);\n  const {\n    email\n  } = loginInfo;\n  const {\n    id\n  } = useParams();\n  const scrollRef = useRef();\n  const messageRef = useRef();\n\n  const handleMouseEnter = id => {\n    setShowServer(id);\n  };\n\n  const handleMouseLeave = id => {\n    setShowServer(null);\n  };\n\n  const handleSendMessage = e => {\n    if (e.key === \"Enter\") {\n      socket.emit(\"message\", {\n        email,\n        message,\n        id\n      });\n      e.target.value = \"\";\n    }\n  };\n\n  const handleRemove = async (e, message) => {\n    console.log(message);\n    await axios.delete(`http://localhost:4000/messages/`, {\n      message\n    });\n  };\n\n  useEffect(() => {\n    socket.emit(\"changeRoom\", id);\n    axios.get(`http://localhost:4000/app/${id}`).then(res => {\n      const {\n        data\n      } = res;\n      const messages = [...data];\n      const newServerList = [...serverList];\n      newServerList.map(server => {\n        if (server.name == id) {\n          server.messages = messages;\n        }\n      });\n      setServerList(newServerList);\n      scrollRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n        inline: \"start\"\n      });\n    });\n  }, [id]);\n  useEffect(() => {\n    socket.on(\"message\", _ref => {\n      let {\n        email,\n        message,\n        id\n      } = _ref;\n      const newServerList = [...serverList];\n      newServerList.map(server => {\n        if (server.name == id) {\n          server.messages.push({\n            email,\n            message\n          });\n        }\n      });\n      setServerList(newServerList);\n      scrollRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n        inline: \"start\"\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chat,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.insideapp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.server,\n        children: /*#__PURE__*/_jsxDEV(ChatBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.leftside,\n        children: serverList.map(server => {\n          return id === server.name && server.channels.map(channel => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.channel,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"# \", channel.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, channel.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this);\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.middle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.messagesView,\n          children: serverList.map(server => {\n            return id === server.name && server.messages.map((message, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                className: styles.message,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.messageInfo,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    ref: messageRef,\n                    children: message.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 25\n                  }, this), message.email === loginInfo.email && /*#__PURE__*/_jsxDEV(ClearIcon, {\n                    onClick: e => {\n                      handleRemove(e, message.email, message.message);\n                    },\n                    className: styles.messageRemove\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this);\n            });\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            setMessage(e.target.value);\n          },\n          onKeyPress: e => handleSendMessage(e),\n          className: styles.textBox,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightside\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"w/PYPp0I9TPn5TDJu+GiEzY+LnY=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Rin/Desktop/Projects/discord-clone/client/src/components/Chat.js"],"names":["React","useState","useContext","useEffect","useRef","ClearIcon","io","UserContext","LoginContext","ServerContext","styles","ChatBar","useParams","cors","axios","socket","transports","Chat","serverList","setServerList","isLoggedIn","setIsLoggedIn","loginInfo","setLoginInfo","message","setMessage","showServer","setShowServer","email","id","scrollRef","messageRef","handleMouseEnter","handleMouseLeave","handleSendMessage","e","key","emit","target","value","handleRemove","console","log","delete","get","then","res","data","messages","newServerList","map","server","name","current","scrollIntoView","behavior","block","inline","on","push","chat","insideapp","leftside","channels","channel","middle","messagesView","index","messageInfo","messageRemove","textBox","rightside"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport { io } from \"socket.io-client\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { LoginContext } from \"../context/LoginContext\";\r\nimport { ServerContext } from \"../context/ServerContext\";\r\nimport styles from \"./Chat.module.css\";\r\nimport ChatBar from \"./ChatBar\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport cors from \"cors\";\r\nimport axios from \"axios\";\r\n\r\nconst socket = io(\"http://localhost:4000/\", {\r\n  transports: [\"websocket\", \"polling\"],\r\n});\r\n\r\nconst Chat = () => {\r\n  const { serverList, setServerList } = useContext(ServerContext);\r\n  const { isLoggedIn, setIsLoggedIn } = useContext(LoginContext);\r\n  const { loginInfo, setLoginInfo } = useContext(UserContext);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [showServer, setShowServer] = useState(null);\r\n\r\n  const { email } = loginInfo;\r\n\r\n  const { id } = useParams();\r\n\r\n  const scrollRef = useRef();\r\n  const messageRef = useRef();\r\n\r\n  const handleMouseEnter = (id) => {\r\n    setShowServer(id);\r\n  };\r\n  const handleMouseLeave = (id) => {\r\n    setShowServer(null);\r\n  };\r\n\r\n  const handleSendMessage = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      socket.emit(\"message\", { email, message, id });\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleRemove = async (e, message) => {\r\n    console.log(message);\r\n    await axios.delete(`http://localhost:4000/messages/`, { message });\r\n  };\r\n  useEffect(() => {\r\n    socket.emit(\"changeRoom\", id);\r\n    axios.get(`http://localhost:4000/app/${id}`).then((res) => {\r\n      const { data } = res;\r\n      const messages = [...data];\r\n      const newServerList = [...serverList];\r\n      newServerList.map((server) => {\r\n        if (server.name == id) {\r\n          server.messages = messages;\r\n        }\r\n      });\r\n      setServerList(newServerList);\r\n      scrollRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n        inline: \"start\",\r\n      });\r\n    });\r\n  }, [id]);\r\n  useEffect(() => {\r\n    socket.on(\"message\", ({ email, message, id }) => {\r\n      const newServerList = [...serverList];\r\n      newServerList.map((server) => {\r\n        if (server.name == id) {\r\n          server.messages.push({ email, message });\r\n        }\r\n      });\r\n      setServerList(newServerList);\r\n      scrollRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n        inline: \"start\",\r\n      });\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className={styles.chat}>\r\n      <div className={styles.insideapp}>\r\n        <div className={styles.server}>\r\n          <ChatBar />\r\n        </div>\r\n        <div className={styles.leftside}>\r\n          {serverList.map((server) => {\r\n            return (\r\n              id === server.name &&\r\n              server.channels.map((channel) => {\r\n                return (\r\n                  <div key={channel.id} className={styles.channel}>\r\n                    <h3># {channel.name}</h3>\r\n                  </div>\r\n                );\r\n              })\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={styles.middle}>\r\n          <div className={styles.messagesView}>\r\n            {serverList.map((server) => {\r\n              return (\r\n                id === server.name &&\r\n                server.messages.map((message, index) => {\r\n                  return (\r\n                    <div ref={scrollRef} key={index} className={styles.message}>\r\n                      <p>{message.email}</p>\r\n                      <div className={styles.messageInfo}>\r\n                        <p ref={messageRef}>{message.message}</p>\r\n                        {message.email === loginInfo.email && (\r\n                          <ClearIcon\r\n                            onClick={(e) => {\r\n                              handleRemove(e, message.email, message.message);\r\n                            }}\r\n                            className={styles.messageRemove}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              );\r\n            })}\r\n          </div>\r\n          <input\r\n            onChange={(e) => {\r\n              setMessage(e.target.value);\r\n            }}\r\n            onKeyPress={(e) => handleSendMessage(e)}\r\n            className={styles.textBox}\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className={styles.rightside}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}